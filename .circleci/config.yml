# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:3.0.3-node-browsers
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: harman-vendor-test
          RAILS_ENV: test
          NOKOGIRI_USE_SYSTEM_LIBRARIES: true
          USE_OFFICIAL_GEM_SOURCE: true

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/product_hunt_repo

    steps:
      - checkout

      # Which version of bundler? should keep same as Gemfile.lock
      - run:
          name: install bundler
          command: gem install bundler && bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - product_hunt-bundle-v2-{{ checksum "Gemfile.lock" }}

      - run:
          name: install dependencies
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: product_hunt-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - product_hunt-yarn-{{ checksum "yarn.lock" }}

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: product_hunt-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: bin/rails test:system test

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
